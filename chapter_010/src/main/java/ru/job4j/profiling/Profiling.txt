Анализ сборки мусора программы заявок из второго модуля (chapter_002) Tracker

Наблюдение за поведением GC (G1) осуществлялось с помощью профилировщиков:
- VisualVM;
- JConsole.

1) При запуске программы с дефолтными настройками памяти для кучи (256Мб) наблюдалась следующая картина:
- большой временной интервал между началом сборки мусора в Eden и его (мусора) перемещения в Survivor;
- медленное заполнение мусора в Survivor;
- при небольшом заполнении Survivor незначительно повышался уровень Old Gen, в этот момент сборка мусора в Eden прекращалась;
- из-за большого объема памяти очищение Old Gen сборщиком мусора на момент анализа не потребовалось.

2) При запуске программы с настройками памяти для кучи в 15Мб наблюдалась следующая картина:
- уменьшился временной интервал между началом сборки мусора в Eden и его (мусора) перемещения в Survivor (в районе 5-7 секунд);
- заполнение мусора в Survivor стало проходить быстрее;
- Old Gen приходилось задействовать чаще, что тормозило работу Eden;
- максимальный порог, которого достиг Old Gen во время проведенного анализа составлял половину от выделенной ему памяти.

3) При запуске программы с настройками памяти для кучи в 6Мб наблюдалась следующая картина:
- интервал между началом сборки мусора в Eden и его (мусора) перемещения в Survivor стал еще меньше (в районе 1-2 секунд), частота вызова Young Gen заметно участилась;
- заполнение мусора в Survivor стало проходить еще быстрее;
- при старте Old Gen был уже наполовину занят;
- через 4 минуты работы после старта программы Old Gen достиг 90% своего уровня – в этот момент в консоли стали выпадать ошибки java.lang.OutOfMemoryError.


